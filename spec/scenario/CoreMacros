-- These are included in each scenario

Macro Successfully
    Invariant Success

Macro AllowFailures
    ClearInvariants Success

Macro PricedComptroller closeFactor=0.1 maxAssets=20
    Unitroller Deploy
    PriceOracle Deploy Simple
    ComptrollerImpl Deploy Scenario ScenComptroller
    Unitroller SetPendingImpl ScenComptroller
    ComptrollerImpl ScenComptroller Become
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero) -- if listing vBnb use ListedBNBToken to replace proxy
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetCloseFactor closeFactor
    Comptroller SetMaxAssets maxAssets

Macro NewComptroller price=1.0 closeFactor=0.1 maxAssets=20
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    --g1
    ComptrollerImpl Deploy ScenarioG1 ComptrollerG1
    Unitroller SetPendingImpl ComptrollerG1
    ComptrollerImpl ComptrollerG1 BecomeG1
    --g2
    ComptrollerImpl Deploy ScenarioG2 ComptrollerG2
    Unitroller SetPendingImpl ComptrollerG2
    ComptrollerImpl ComptrollerG2 BecomeG2
    --current
    ComptrollerImpl Deploy Scenario ScenComptroller
    Unitroller SetPendingImpl ScenComptroller
    ComptrollerImpl ScenComptroller Become
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero) -- if listing vBnb use ListedBNBToken to replace proxy
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetMaxAssets maxAssets
    Comptroller SetCloseFactor closeFactor

Macro NewBToken bep20 bToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 tokenType=Standard delegatorType=BBep20DelegatorScenario bTokenType=BBep20DelegateScenario admin=Admin becomeImplementationData="0x0"
    Bep20 Deploy tokenType bep20 bep20
    InterestRateModel Deploy Fixed StdInterest borrowRate -- Note: interest rate model probably shouldn't be global
    BTokenDelegate Deploy bTokenType vBep20Delegate
    BToken Deploy delegatorType bToken bToken (Bep20 bep20 Address) (Comptroller Address) (InterestRateModel StdInterest Address) initialExchangeRate decimals admin (BTokenDelegate vBep20Delegate Address) becomeImplementationData

-- Same as NewBToken but does not deploy an BEP20. Used for special BEP20s that are initialized differently
Macro NewBTokenBringBEP20 bep20 bToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 delegatorType=BBep20DelegatorScenario bTokenType=BBep20DelegateScenario admin=Admin becomeImplementationData="0x0"
    InterestRateModel Deploy Fixed StdInterest borrowRate -- Note: interest rate model probably shouldn't be global
    BTokenDelegate Deploy bTokenType vBep20Delegate
    BToken Deploy delegatorType bToken bToken (Bep20 bep20 Address) (Comptroller Address) (InterestRateModel StdInterest Address) initialExchangeRate decimals admin (BTokenDelegate vBep20Delegate Address) becomeImplementationData

Macro NewBTokenImmutable bep20 bToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 tokenType=Standard bTokenType=Scenario admin=Admin
    Bep20 Deploy tokenType bep20 bep20
    InterestRateModel Deploy Fixed StdInterest borrowRate -- Note: interest rate model probably shouldn't be global
    BToken Deploy bTokenType bToken bToken (Bep20 bep20 Address) (Comptroller Address) (InterestRateModel StdInterest Address) initialExchangeRate decimals admin

Macro NewBNBToken bToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 admin=Admin
    InterestRateModel Deploy Fixed StdInterest borrowRate -- Note: interest rate model probably shouldn't be global
    BToken Deploy BBNBScenario bToken bToken (Comptroller Address) (InterestRateModel StdInterest Address) initialExchangeRate decimals admin

Macro ListedBToken bep20 bToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 tokenType=Standard delegatorType=BBep20DelegatorScenario bTokenType=BBep20DelegateScenario admin=Admin
    NewBToken bep20 bToken borrowRate initialExchangeRate decimals tokenType delegatorType bTokenType admin
    Comptroller SupportMarket bToken

Macro ListedBTokenImmutable bep20 bToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 tokenType=Standard bTokenType=Scenario admin=Admin
    NewBTokenImmutable bep20 bToken borrowRate initialExchangeRate decimals tokenType bTokenType admin
    Comptroller SupportMarket bToken

Macro ListedBNBToken bToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 admin=Admin
    NewBNBToken bToken borrowRate initialExchangeRate decimals admin
    Comptroller SupportMarket bToken
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address vBNB) (Address Zero) (Address Zero) (Address Zero) (Address Zero)
    Comptroller SetPriceOracle (PriceOracleProxy Address)

Macro ListedBNBTokenMinted bToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 admin=Admin
    NewBNBToken bToken borrowRate initialExchangeRate decimals admin
    Comptroller SupportMarket bToken
    CallMintBnb Root 1e18 bToken

Macro SetPriceCF bToken price collateralFactor
    PriceOracle SetPrice bToken price
    Comptroller SetCollateralFactor bToken collateralFactor

Macro Give user amount bep20
    Bep20 bep20 Faucet user amount

Macro Donate token amount
    (Trx Value amount (BToken token Donate))

Macro Prep user amount bep20 token allowanceAmount=Nothing
    Bep20 bep20 Faucet user amount
    From user (Bep20 bep20 Approve token (Default allowanceAmount amount))

Macro Allow user token
    From user (Bep20 (BToken token Underlying) Approve token UInt256Max)

Macro AccrueInterest token
    BToken token AccrueInterest

Macro Mint user amount token
    From user (BToken token Mint amount)

Macro SendMintBnb user amount token
    From user (Trx GasPrice 0 (Trx Value amount (Send token amount)))

Macro CallMintBnb user amount token
    From user (Trx GasPrice 0 (Trx Value amount (BToken token Mint)))

Macro Redeem user amount token
    From user (BToken token Redeem amount)

Macro RedeemBnb user amount token
    Trx GasPrice 0 (From user (BToken token Redeem amount))

Macro RedeemUnderlying user amount token
    From user (BToken token RedeemUnderlying amount)

Macro RedeemUnderlyingBnb user amount token
    Trx GasPrice 0 (From user (BToken token RedeemUnderlying amount))

Macro BorrowBnb user amount token
    Trx GasPrice 0 (From user (BToken token Borrow amount))

Macro Borrow user amount token
    From user (BToken token Borrow amount)

Macro RepayBorrow user amount token
    From user (BToken token RepayBorrow amount)

Macro RepayBorrowBnb user amount token
    From user (Trx GasPrice 0 (Trx Value amount (BToken token RepayBorrow)))

Macro RepayBorrowBnbMax user amount token
    From user (Trx GasPrice 0 (Trx Value amount (Maximillion RepayBehalf user)))

Macro RepayBorrowBehalf user behalf amount token
    From user (BToken token RepayBorrowBehalf behalf amount)

Macro RepayBorrowBnbBehalf user behalf amount token
    From user (Trx GasPrice 0 (Trx Value amount (BToken token RepayBorrowBehalf behalf)))

Macro Liquidate liquidator _ borrower amount token _ collateral
    From liquidator (BToken token Liquidate borrower collateral amount)

Macro LiquidateBnbColl liquidator _ borrower amount token _ collateral
    From liquidator (Trx GasPrice 0 (BToken token Liquidate borrower collateral amount))

Macro LiquidateBnbBorrow liquidator _ borrower amount token _ collateral
    From liquidator (Trx GasPrice 0 (Trx Value amount (BToken token Liquidate borrower collateral)))

Macro Seize amount token caller liquidator borrower
    From caller (BToken token Seize liquidator borrower amount)

Macro EvilSeize token amount treasure seizer seizee
    BToken token EvilSeize treasure seizer seizee amount

Macro Support bToken collateralFactor=0.5
    Comptroller SupportMarket bToken
    Comptroller SetCollateralFactor bToken collateralFactor

Macro SetCollateralFactor bToken collateralFactor=0.5
    Comptroller SetCollateralFactor bToken collateralFactor

Macro AddReserves amount token user=Root
    From user (BToken token AddReserves amount)

Macro ReduceReserves amount token
    BToken token ReduceReserves amount

Macro FastForward n blocks
    Comptroller FastForward n blocks

Macro EnterMarkets user ...markets
    From user (Comptroller EnterMarkets markets)

Macro ExitMarket user market
    From user (Comptroller ExitMarket market)

Macro Transfer from to amount token
    From from (Bep20 token Transfer to amount)

Macro Cash bToken
    Read Bep20 (BToken bToken Underlying) TokenBalance bToken

Macro QuickMint amount bToken from=Me
    Give from amount (BToken bToken Underlying)
    Allow from bToken
    From from (BToken bToken Mint amount)

Macro QuickBorrow amount bToken ...collateral
    From Me (Comptroller EnterMarkets collateral)
    From Me (Comptroller EnterMarkets (bToken))
    From Me (BToken bToken Borrow amount)

-- Macro for performing a borrow with the sole
-- purpose of adding interest to the bep20 market
Macro BorrowAndRepayWithInterest bep20 bToken amount interestAmount interestRate blocks reserveRate=0
    -- TODO: Make invariant success for these?
    -- TODO: Named args as macros
    InterestRateModel Deploy Fixed Std interestRate
    BToken bToken SetInterestRateModel (InterestRateModel Std Address)
    BToken bToken SetReserveFactor reserveRate
    ListedBToken COLLAT cCOLLAT
    Comptroller SetCollateralFactor cCOLLAT 0.9
    Prep Torrey 1e30 COLLAT cCOLLAT
    Mint Torrey 1e30 cCOLLAT
    EnterMarkets Torrey cCOLLAT bToken
    Assert True (Comptroller CheckMembership Torrey cCOLLAT)
    Assert True (Comptroller CheckMembership Torrey bToken)
    Borrow Torrey amount bToken
    -- Cool, we've borrowed, now let's accrue interest then repay all
    FastForward blocks Blocks
    -- RepayBorrow Torrey (BToken BorrowBalance Torrey) bToken
    From Torrey (Bep20 bep20 Approve bToken amount)
    RepayBorrow Torrey amount bToken
    From Torrey (Bep20 bep20 Approve bToken interestAmount)
    Give Torrey interestAmount bep20
    RepayBorrow Torrey interestAmount bToken
    Assert Equal (BToken bToken BorrowBalance Torrey) Zero

-- Macro for performing a borrow with the sole
-- purpose of adding interest to the bnb market
Macro BorrowAndRepayBnbWithInterest vBnb amount interestAmount interestRate blocks reserveRate=0
    -- TODO: Make invariant success for these?
    -- TODO: Named args as macros
    InterestRateModel Deploy Fixed Std interestRate
    BToken vBnb SetInterestRateModel (InterestRateModel Std Address)
    BToken vBnb SetReserveFactor reserveRate
    ListedBToken COLLAT cCOLLAT
    Comptroller SetCollateralFactor cCOLLAT 0.9
    Prep Torrey 1e30 COLLAT cCOLLAT
    Mint Torrey 1e30 cCOLLAT
    EnterMarkets Torrey cCOLLAT vBnb
    Assert True (Comptroller CheckMembership Torrey cCOLLAT)
    Assert True (Comptroller CheckMembership Torrey vBnb)
    Borrow Torrey amount vBnb
    -- Cool, we've borrowed, now let's accrue interest then repay all
    FastForward blocks Blocks
    -- RepayBorrow Torrey (BToken BorrowBalance Torrey) vBnb
    RepayBorrowBnb Torrey amount vBnb
    RepayBorrowBnb Torrey interestAmount vBnb
    Assert Equal (BToken vBnb BorrowBalance Torrey) Zero
